---
- hosts: slave1
  vars:
    symfony_root_dir: "/var/www/symfony"

  become: true
  tasks:
    - name: Test connessione Ansible
      ping:

    - name: Aggiornare pacchetti
      apt:
        update_cache: yes

    # TEST:
    # ansible all -m shell -a "git --version"
    - name: Installare Git
      apt:
        name: git
        state: present

    - name: Installare Apache
      apt:
        name: apache2
        state: present

    # TEST:
    # ansible all -m shell -a "systemctl status apache2"
    - name: Avviare Apache2
      shell: service apache2 start

    - name: Installare MySQL
      apt:
        name: mysql-server
        state: present

    # TEST:
    # ansible all -m shell -a "mysql --version"
    - name: Avviare MySQL
      apt:
        name: mysql-server
        state: present

    - name: Avviare MySQL
      shell: service mysql start

    - name: Installare pacchetti richiesti per repository PPA
      apt:
        name: software-properties-common
        state: present

    - name: Aggiungere repository PHP
      shell: add-apt-repository -y ppa:ondrej/php && apt-get update

    # TEST:
    # ansible all -m shell -a "php -v"
    - name: Installare PHP 7.1
      apt:
#        name: php7.1
        name:
          - php7.1-cli
          - php7.1-curl
          - php7.1-fpm
          - php7.1-intl
          - php7.1-mysql
          - php7.1-xml
        state: present

    # TEST:
    # ansible all -m shell -a "composer --version"
    - name: Download Composer
      script: ./scripts/install_composer.sh

    - name: Spostare eseguibile di Composer
      become: true
      command: "mv composer.phar /usr/local/bin/composer"

    - name: Settaggio permessi Composer
      become: true
      file:
        path: /usr/local/bin/composer
        mode: "a+x"

    # TEST:
    # ansible all -m shell -a "ls /var/www/symfony"
    - name: Clonare repository Symfony
      git:
        repo: 'https://github.com/symfony/skeleton.git'
        dest: "{{ symfony_root_dir }}"

#    - name: Installare dipendenze Symfony
#      shell: cd /var/www/symfony && composer install

    - name: Impostare permessi
      file:
        path: "{{ symfony_root_dir }}"
        owner: www-data
        group: www-data
        mode: "0755"
        recurse: yes

    - name: Creare VirtualHost per Symfony
      copy:
        dest: /etc/apache2/sites-available/symfony.conf
        content: |
            <VirtualHost *:80>
                ServerName localhost
                DocumentRoot {{ symfony_root_dir }}/public
                
                <Directory {{ symfony_root_dir }}/public>
                    AllowOverride All
                    Require all granted
                </Directory>
                
                ErrorLog ${APACHE_LOG_DIR}/error.log
                CustomLog ${APACHE_LOG_DIR}/access.log combined
            </VirtualHost>

#    - name: Abilitare VirtualHost e riscrittura mod_rewrite
#      shell: a2ensite symfony.conf && a2enmod rewrite && systemctl restart apache2

###################################################################################
    - name: Installare le dipendenze PHP con Composer
      command: composer install --no-dev --optimize-autoloader
      args:
        chdir: "{{ symfony_root_dir }}"

    - name: Creare il file .env
      copy:
        dest: "{{ symfony_root_dir }}/.env"
        content: |
          APP_ENV=prod
          APP_SECRET=1234567890abcdef
          DATABASE_URL=mysql://root:password@127.0.0.1:3306/symfony_db
#    - name: Copiare .env.example in .env
#      command: cp "{{ symfony_root_dir }}/.env.example" "{{ symfony_root_dir }}/.env"
#      args:
#        creates: "{{ symfony_root_dir }}/.env"


    - name: Modificare la configurazione di Doctrine
      lineinfile:
        path: "{{ symfony_root_dir }}/config/packages/doctrine.yaml"
        regexp: '^url: '
        line: 'url: '%env(DATABASE_URL)%'













#    - name: Avviare il server Symfony
#      command: "php bin/console server:run 0.0.0.0:8000"
#      args:
#        chdir: "{{ symfony_root_dir }}"
#
#    - name: Abilitare il sito Symfony in Apache
#      command: a2ensite symfony
#
#    - name: Riavviare Apache
#      shell: apachectl restart
